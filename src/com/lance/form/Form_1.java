/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lance.form;

import com.lance.model.AESUtil;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetAdapter;
import java.awt.dnd.DropTargetDragEvent;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.dnd.DropTargetEvent;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author wence
 */

public class Form_1 extends javax.swing.JPanel {
    
private File selectedFile;

    /**
     * Creates new form Form_1
     */
    public Form_1() {
        initComponents();
        
        dropZoneLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
    dropZoneLabel.setHorizontalAlignment(SwingConstants.CENTER);
    dropZoneLabel.setBorder(BorderFactory.createDashedBorder(Color.GRAY));
    dropZoneLabel.setBackground(Color.LIGHT_GRAY);
    dropZoneLabel.setOpaque(true);
    dropZoneLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));

    filePathField.setFont(new Font("Segoe UI", Font.PLAIN, 14));

    encryptButton.setBackground(new Color(0, 153, 76));
    encryptButton.setForeground(Color.WHITE);
    encryptButton.setFont(new Font("Segoe UI", Font.BOLD, 14));

    decryptButton.setBackground(new Color(204, 102, 0));
    decryptButton.setForeground(Color.WHITE);
    decryptButton.setFont(new Font("Segoe UI", Font.BOLD, 14));

        browseButton.setBackground(new Color(0, 120, 215));
    browseButton.setForeground(Color.WHITE);
    browseButton.setFont(new Font("Segoe UI", Font.PLAIN, 13));

    
    setOpaque(false);
    color1 = Color.decode("#FFE47A");
        color2 = Color.decode("#3D7EAA"); 
        
       

    }
    
    public Color getColor1() {
        return color1;
    }

    public void setColor1(Color color1) {
        this.color1 = color1;
    }

    public Color getColor2() {
        return color2;
    }

    public void setColor2(Color color2) {
        this.color2 = color2;
    }

    private Color color1;
    private Color color2;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dropZoneLabel = new javax.swing.JLabel();
        previewLabel = new javax.swing.JLabel();
        filePathField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        encryptButton = new javax.swing.JButton();
        decryptButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 242, 242));

        dropZoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dropZoneLabel.setText("ðŸ“„ Drop your file here");
        new DropTarget(dropZoneLabel, new DropTargetAdapter() {
            @Override
            public void dragEnter(DropTargetDragEvent dtde) {
                dropZoneLabel.setBorder(BorderFactory.createLineBorder(Color.GREEN, 2));
            }

            @Override
            public void dragExit(DropTargetEvent dte) {
                dropZoneLabel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));
            }

            @Override
            public void drop(DropTargetDropEvent dtde) {
                dropZoneLabel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));
                try {
                    dtde.acceptDrop(DnDConstants.ACTION_COPY);
                    java.util.List<File> droppedFiles = (java.util.List<File>) dtde.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                    if (!droppedFiles.isEmpty()) {
                        selectedFile = droppedFiles.get(0);
                        filePathField.setText(selectedFile.getAbsolutePath());

                        // Check if it's an image
                        if (selectedFile.getName().matches(".*\\.(jpg|jpeg|png|gif|bmp|)$")) {
                            ImageIcon icon = new ImageIcon(selectedFile.getAbsolutePath());
                            Image scaledImage = icon.getImage().getScaledInstance(previewLabel.getWidth(), previewLabel.getHeight(), Image.SCALE_SMOOTH);
                            previewLabel.setIcon(new ImageIcon(scaledImage));
                        } else {
                            previewLabel.setIcon(new ImageIcon(getClass().getResource("com/lance/icon/folder.png")));
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });

        previewLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        previewLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/lance/icon/folder.png"))); // NOI18N
        previewLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        previewLabel.setPreferredSize(new java.awt.Dimension(150, 150));

        filePathField.setEditable(false);
        filePathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathFieldActionPerformed(evt);
            }
        });

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        passwordField.setText("jPasswordField1");
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        encryptButton.setText("Encrypt");
        encryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButtonActionPerformed(evt);
            }
        });

        decryptButton.setText("Decrypt");
        decryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/lance/icon/fortress.png"))); // NOI18N
        jLabel2.setText("FILE ENCRYPTION");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("By: QRCipher");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(encryptButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(decryptButton))
                            .addComponent(dropZoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(previewLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addContainerGap(408, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dropZoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(previewLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseButton))
                .addGap(18, 18, 18)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encryptButton)
                    .addComponent(decryptButton))
                .addContainerGap(63, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics grphcs) {
        Graphics2D g2 = (Graphics2D) grphcs;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        GradientPaint g = new GradientPaint(0, 0, color1, 0, getHeight(), color2);
        g2.setPaint(g);
        g2.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15);
        g2.setColor(new Color(255, 255, 255, 50));
        g2.fillOval(getWidth() - (getHeight() / 2), 10, getHeight(), getHeight());
        g2.fillOval(getWidth() - (getHeight() / 2) - 20, getHeight() / 2 + 20, getHeight(), getHeight());
        super.paintComponent(grphcs);
    }
    
    private void filePathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
    int result = chooser.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
    selectedFile = chooser.getSelectedFile();
    filePathField.setText(selectedFile.getAbsolutePath());
}

    }//GEN-LAST:event_browseButtonActionPerformed

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButtonActionPerformed
        // TODO add your handling code here:
        if (selectedFile == null || !selectedFile.exists()) {
    JOptionPane.showMessageDialog(this, "Please select a valid file.");
    return;
}
if (passwordField.getPassword().length == 0) {
    JOptionPane.showMessageDialog(this, "Please enter a password.");
    return;
}

try {
    File outputFile = new File(selectedFile.getParent(), selectedFile.getName() + ".enc");
    AESUtil.encrypt(selectedFile, outputFile, new String(passwordField.getPassword()));
    JOptionPane.showMessageDialog(this, "File encrypted: " + outputFile.getAbsolutePath());
} catch (Exception ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "Encryption failed: " + ex.getMessage());
}

    }//GEN-LAST:event_encryptButtonActionPerformed

    private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButtonActionPerformed
        // TODO add your handling code here:
        if (selectedFile == null || !selectedFile.exists()) {
    JOptionPane.showMessageDialog(this, "Please select a valid file.");
    return;
}
if (passwordField.getPassword().length == 0) {
    JOptionPane.showMessageDialog(this, "Please enter a password.");
    return;
}

try {
    File outputFile = new File(selectedFile.getParent(), "decrypted_" + selectedFile.getName().replace(".enc", ""));
    AESUtil.decrypt(selectedFile, outputFile, new String(passwordField.getPassword()));
    JOptionPane.showMessageDialog(this, "File decrypted: " + outputFile.getAbsolutePath());
} catch (Exception ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "Decryption failed: " + ex.getMessage());
}

    }//GEN-LAST:event_decryptButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JButton decryptButton;
    private javax.swing.JLabel dropZoneLabel;
    private javax.swing.JButton encryptButton;
    private javax.swing.JTextField filePathField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel previewLabel;
    // End of variables declaration//GEN-END:variables
}
